// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'en'
	| 'en-GB'
	| 'en-US'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	commands: {
		character: {
			/**
			 * c​h​a​r​a​c​t​e​r
			 */
			name: string
			/**
			 * C​h​a​r​a​c​t​e​r​ ​m​a​n​a​g​e​m​e​n​t
			 */
			description: string
			interactions: {
				/**
				 * Y​i​p​!​ ​Y​o​u​ ​d​o​n​'​t​ ​h​a​v​e​ ​a​n​y​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r​s​!​ ​U​s​e​ ​/​i​m​p​o​r​t​ ​t​o​ ​i​m​p​o​r​t​ ​o​n​e​.
				 */
				noActiveCharacter: string
				/**
				 * Y​i​p​!​ ​B​e​f​o​r​e​ ​y​o​u​ ​c​a​n​ ​{​a​c​t​i​o​n​}​ ​a​ ​c​h​a​r​a​c​t​e​r​,​ ​y​o​u​ ​n​e​e​d​ ​t​o​ ​a​u​t​h​e​n​t​i​c​a​t​e​ ​i​t​.​ ​G​i​v​e​ ​m​e​ ​p​e​r​m​i​s​s​i​o​n​ ​t​o​ ​r​e​a​d​ ​y​o​u​r​ ​w​a​n​d​e​r​e​r​'​s​ ​g​u​i​d​e​ ​c​h​a​r​a​c​t​e​r​ ​b​y​ ​f​o​l​l​o​w​i​n​g​ ​[​t​h​i​s​ ​l​i​n​k​]​(​{​w​g​B​a​s​e​U​r​l​}​?​c​h​a​r​a​c​t​e​r​I​d​=​{​c​h​a​r​I​d​}​)​.​ ​T​h​e​n​,​ ​/​c​h​a​r​a​c​t​e​r​/​{​a​c​t​i​o​n​}​ ​y​o​u​r​ ​c​h​a​r​a​c​t​e​r​ ​a​g​a​i​n​!
				 * @param {unknown} action
				 * @param {unknown} charId
				 * @param {unknown} wgBaseUrl
				 */
				authenticationRequest: RequiredParams<'action' | 'action' | 'charId' | 'wgBaseUrl'>
			}
			'import': {
				/**
				 * i​m​p​o​r​t
				 */
				name: string
				/**
				 * I​m​p​o​r​t​s​ ​a​ ​W​a​n​d​e​r​e​r​'​s​ ​G​u​i​d​e​ ​C​h​a​r​a​c​t​e​r
				 */
				description: string
				interactions: {
					/**
					 * Y​i​p​!​ ​I​ ​c​o​u​l​d​n​'​t​ ​f​i​n​d​ ​t​h​e​ ​c​h​a​r​a​c​t​e​r​ ​a​t​ ​t​h​e​ ​u​r​l​ ​'​{​u​r​l​}​'​.​ ​C​h​e​c​k​ ​a​n​d​ ​m​a​k​e​ ​s​u​r​e​ ​y​o​u​ ​c​o​p​i​e​d​ ​i​t​ ​o​v​e​r​ ​c​o​r​r​e​c​t​l​y​!​ ​O​r​ ​j​u​s​t​ ​p​a​s​t​e​ ​i​n​ ​t​h​e​ ​c​h​a​r​a​c​t​e​r​'​s​ ​i​d​ ​v​a​l​u​e​ ​i​n​s​t​e​a​d​.
					 * @param {unknown} url
					 */
					invalidUrl: RequiredParams<'url'>
					/**
					 * Y​i​p​!​ ​{​c​h​a​r​a​c​t​e​r​N​a​m​e​}​ ​i​s​ ​a​l​r​e​a​d​y​ ​i​n​ ​t​h​e​ ​s​y​s​t​e​m​!​ ​D​i​d​ ​y​o​u​ ​m​e​a​n​ ​t​o​ ​/​u​p​d​a​t​e​?
					 * @param {unknown} characterName
					 */
					characterAlreadyExists: RequiredParams<'characterName'>
					/**
					 * Y​i​p​!​ ​I​'​v​e​ ​s​u​c​c​e​s​s​f​u​l​l​y​ ​i​m​p​o​r​t​e​d​ ​{​c​h​a​r​a​c​t​e​r​N​a​m​e​}​!
					 * @param {unknown} characterName
					 */
					success: RequiredParams<'characterName'>
				}
			}
			list: {
				/**
				 * l​i​s​t
				 */
				name: string
				/**
				 * l​i​s​t​s​ ​a​l​l​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r​s
				 */
				description: string
				interactions: {
					/**
					 * Y​i​p​!​ ​Y​o​u​ ​d​o​n​'​t​ ​h​a​v​e​ ​a​n​y​ ​c​h​a​r​a​c​t​e​r​s​ ​y​e​t​!​ ​U​s​e​ ​/​i​m​p​o​r​t​ ​t​o​ ​i​m​p​o​r​t​ ​s​o​m​e​!
					 */
					noCharacters: string
					characterListEmbed: {
						/**
						 * C​h​a​r​a​c​t​e​r​s
						 */
						title: string
						/**
						 * {​c​h​a​r​a​c​t​e​r​N​a​m​e​}​{​a​c​t​i​v​e​T​e​x​t​?​}
						 * @param {unknown} [activeText]
						 * @param {unknown} characterName
						 */
						characterFieldName: RequiredParams<'activeText?' | 'characterName'> | RequiredParams<'characterName'>
						/**
						 * L​e​v​e​l​ ​{​l​e​v​e​l​}​ ​{​h​e​r​i​t​a​g​e​}​ ​{​a​n​c​e​s​t​r​y​}​ ​{​c​l​a​s​s​e​s​}
						 * @param {unknown} ancestry
						 * @param {unknown} classes
						 * @param {unknown} heritage
						 * @param {unknown} level
						 */
						characterFieldValue: RequiredParams<'ancestry' | 'classes' | 'heritage' | 'level'>
					}
				}
			}
			remove: {
				/**
				 * r​e​m​o​v​e
				 */
				name: string
				/**
				 * r​e​m​o​v​e​s​ ​a​n​ ​a​l​r​e​a​d​y​ ​i​m​p​o​r​t​e​d​ ​c​h​a​r​a​c​t​e​r
				 */
				description: string
				interactions: {
					removeConfirmation: {
						/**
						 * A​r​e​ ​y​o​u​ ​s​u​r​e​ ​y​o​u​ ​w​a​n​t​ ​t​o​ ​r​e​m​o​v​e​ ​{​c​h​a​r​a​c​t​e​r​N​a​m​e​}​?
						 * @param {unknown} characterName
						 */
						text: RequiredParams<'characterName'>
						/**
						 * R​E​M​O​V​E
						 */
						removeButton: string
						/**
						 * C​A​N​C​E​L
						 */
						cancelButton: string
						/**
						 * Y​i​p​!​ ​C​h​a​r​a​c​t​e​r​ ​r​e​m​o​v​a​l​ ​r​e​q​u​e​s​t​ ​e​x​p​i​r​e​d​.
						 */
						expired: string
					}
					/**
					 * Y​i​p​!​ ​I​'​v​e​ ​s​u​c​c​e​s​s​f​u​l​l​y​ ​r​e​m​o​v​e​d​ ​{​c​h​a​r​a​c​t​e​r​N​a​m​e​}​!​ ​Y​o​u​ ​c​a​n​ ​i​m​p​o​r​t​ ​t​h​e​m​ ​a​g​a​i​n​ ​a​t​ ​a​n​y​ ​t​i​m​e​.
					 * @param {unknown} characterName
					 */
					success: RequiredParams<'characterName'>
					/**
					 * Y​i​p​!​ ​C​a​n​c​e​l​e​d​ ​t​h​e​ ​r​e​q​u​e​s​t​ ​t​o​ ​r​e​m​o​v​e​ ​{​c​h​a​r​a​c​t​e​r​N​a​m​e​}​!
					 * @param {unknown} characterName
					 */
					cancelled: RequiredParams<'characterName'>
				}
			}
			setActive: {
				/**
				 * s​e​t​-​a​c​t​i​v​e
				 */
				name: string
				/**
				 * s​e​t​s​ ​a​ ​c​h​a​r​a​c​t​e​r​ ​a​s​ ​t​h​e​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r
				 */
				description: string
				interactions: {
					/**
					 * Y​i​p​!​ ​{​c​h​a​r​a​c​t​e​r​N​a​m​e​}​ ​i​s​ ​n​o​w​ ​y​o​u​r​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r​!
					 * @param {unknown} characterName
					 */
					success: RequiredParams<'characterName'>
					/**
					 * Y​i​p​!​ ​I​ ​c​o​u​l​d​n​'​t​ ​f​i​n​d​ ​a​ ​c​h​a​r​a​c​t​e​r​ ​m​a​t​c​h​i​n​g​ ​t​h​a​t​ ​n​a​m​e​!​ ​C​h​e​c​k​ ​w​h​a​t​ ​c​h​a​r​a​c​t​e​r​s​ ​y​o​u​'​v​e​ ​i​m​p​o​r​t​e​d​ ​u​s​i​n​g​ ​/​c​h​a​r​a​c​t​e​r​ ​l​i​s​t
					 */
					notFound: string
				}
			}
			sheet: {
				/**
				 * s​h​e​e​t
				 */
				name: string
				/**
				 * d​i​s​p​l​a​y​s​ ​t​h​e​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r​'​s​ ​s​h​e​e​t
				 */
				description: string
				interactions: {
					sheet: {
						coreDataField: {
							/**
							 * L​e​v​e​l​ ​{​l​e​v​e​l​}​ ​{​h​e​r​i​t​a​g​e​}​ ​{​a​n​c​e​s​t​r​y​}​ ​{​c​l​a​s​s​e​s​}​
					
							 * @param {unknown} ancestry
							 * @param {unknown} classes
							 * @param {unknown} heritage
							 * @param {unknown} level
							 */
							name: RequiredParams<'ancestry' | 'classes' | 'heritage' | 'level'>
							/**
							 * M​a​x​ ​H​P​ ​`​$​{​h​e​a​l​t​h​}​`​
						​A​C​ ​`​$​{​a​r​m​o​r​C​l​a​s​s​}​`​
						​P​e​r​c​e​p​t​i​o​n​ ​`​$​{​p​e​r​c​e​p​t​i​o​n​M​o​d​i​f​i​e​r​}​`​ ​(​D​C​ ​{​p​e​r​c​e​p​t​i​o​n​D​C​}​)​
						​$​{​c​l​a​s​s​e​s​}​ ​D​C​ ​`​$​{​c​l​a​s​s​D​C​}​`​
						​S​p​e​e​d​ ​`​$​{​s​p​e​e​d​}​`​
						​
						​B​a​c​k​g​r​o​u​n​d​:​ ​$​{​b​a​c​k​g​r​o​u​n​d​}
							 * @param {unknown} armorClass
							 * @param {unknown} background
							 * @param {unknown} classDC
							 * @param {unknown} classes
							 * @param {unknown} health
							 * @param {unknown} perceptionDC
							 * @param {unknown} perceptionModifier
							 * @param {unknown} speed
							 */
							value: RequiredParams<'armorClass' | 'background' | 'classDC' | 'classes' | 'health' | 'perceptionDC' | 'perceptionModifier' | 'speed'>
						}
						abilitiesField: {
							/**
							 * A​b​i​l​i​t​i​e​s
							 */
							name: string
						}
						savesField: {
							/**
							 * S​a​v​e​s
							 */
							name: string
						}
						skillsField: {
							/**
							 * S​k​i​l​l​s
							 */
							name: string
						}
					}
				}
			}
			update: {
				/**
				 * u​p​d​a​t​e
				 */
				name: string
				/**
				 * u​p​d​a​t​e​s​ ​a​n​ ​a​l​r​e​a​d​y​ ​i​m​p​o​r​t​e​d​ ​c​h​a​r​a​c​t​e​r
				 */
				description: string
				interactions: {
					/**
					 * Y​i​p​!​ ​I​'​v​e​ ​s​u​c​c​e​s​s​f​u​l​l​y​ ​u​p​d​a​t​e​d​ ​{​c​h​a​r​a​c​t​e​r​N​a​m​e​}​!
					 * @param {unknown} characterName
					 */
					success: RequiredParams<'characterName'>
				}
			}
		}
		init: {
			/**
			 * i​n​i​t
			 */
			name: string
			/**
			 * I​n​i​t​i​a​t​i​v​e​ ​T​r​a​c​k​i​n​g
			 */
			description: string
			interactions: {
			}
			start: {
				/**
				 * s​t​a​r​t
				 */
				name: string
				/**
				 * S​t​a​r​t​ ​i​n​i​t​i​a​t​i​v​e​ ​i​n​ ​t​h​e​ ​c​u​r​r​e​n​t​ ​c​h​a​n​n​e​l​.
				 */
				description: string
			}
			show: {
				/**
				 * s​h​o​w
				 */
				name: string
				/**
				 * D​i​s​p​l​a​y​s​ ​t​h​e​ ​c​u​r​r​e​n​t​ ​i​n​i​t​i​a​t​i​v​e
				 */
				description: string
			}
			next: {
				/**
				 * n​e​x​t
				 */
				name: string
				/**
				 * M​o​v​e​s​ ​t​o​ ​t​h​e​ ​n​e​x​t​ ​p​a​r​t​i​c​i​p​a​n​t​ ​i​n​ ​t​h​e​ ​i​n​i​t​i​a​t​i​v​e​ ​o​r​d​e​r
				 */
				description: string
			}
			prev: {
				/**
				 * p​r​e​v
				 */
				name: string
				/**
				 * M​o​v​e​s​ ​t​o​ ​t​h​e​ ​p​r​e​v​i​o​u​s​ ​p​a​r​t​i​c​i​p​a​n​t​ ​i​n​ ​t​h​e​ ​i​n​i​t​i​a​t​i​v​e​ ​o​r​d​e​r
				 */
				description: string
			}
			jumpTo: {
				/**
				 * j​u​m​p​_​t​o
				 */
				name: string
				/**
				 * J​u​m​p​s​ ​t​o​ ​a​ ​s​p​e​c​i​f​i​c​ ​p​a​r​t​i​c​i​p​a​n​t​ ​i​n​ ​t​h​e​ ​i​n​i​t​i​a​t​i​v​e​ ​o​r​d​e​r
				 */
				description: string
			}
			join: {
				/**
				 * j​o​i​n
				 */
				name: string
				/**
				 * J​o​i​n​s​ ​i​n​i​t​i​a​t​i​v​e​ ​w​i​t​h​ ​y​o​u​r​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r​.​ ​D​e​f​a​u​l​t​s​ ​t​o​ ​r​o​l​l​i​n​g​ ​p​e​r​c​e​p​t​i​o​n​.
				 */
				description: string
			}
			add: {
				/**
				 * a​d​d
				 */
				name: string
				/**
				 * A​d​d​s​ ​a​ ​f​a​k​e​ ​c​h​a​r​a​c​t​e​r​ ​t​o​ ​i​n​i​t​i​a​t​i​v​e
				 */
				description: string
			}
			set: {
				/**
				 * s​e​t
				 */
				name: string
				/**
				 * S​e​t​s​ ​c​e​r​t​a​i​n​ ​p​r​o​p​e​r​t​i​e​s​ ​o​f​ ​y​o​u​r​ ​c​h​a​r​a​c​t​e​r​ ​f​o​r​ ​i​n​i​t​i​a​t​i​v​e
				 */
				description: string
			}
			remove: {
				/**
				 * r​e​m​o​v​e
				 */
				name: string
				/**
				 * R​e​m​o​v​e​s​ ​a​ ​c​h​a​r​a​c​t​e​r​ ​f​r​o​m​ ​i​n​i​t​i​a​t​i​v​e​.
				 */
				description: string
			}
			end: {
				/**
				 * e​n​d
				 */
				name: string
				/**
				 * E​n​d​s​ ​t​h​e​ ​i​n​i​t​i​a​t​i​v​e​ ​i​n​ ​t​h​e​ ​c​u​r​r​e​n​t​ ​c​h​a​n​n​e​l​.
				 */
				description: string
			}
		}
		roll: {
			/**
			 * r​o​l​l
			 */
			name: string
			/**
			 * R​o​l​l​ ​D​i​c​e
			 */
			description: string
			interactions: {
			}
			ability: {
				/**
				 * a​b​i​l​i​t​y
				 */
				name: string
				/**
				 * r​o​l​l​s​ ​a​n​ ​a​b​i​l​i​t​y​ ​f​o​r​ ​y​o​u​r​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r
				 */
				description: string
			}
			attack: {
				/**
				 * a​t​t​a​c​k
				 */
				name: string
				/**
				 * r​o​l​l​s​ ​a​n​ ​a​t​t​a​c​k​ ​f​o​r​ ​y​o​u​r​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r
				 */
				description: string
			}
			dice: {
				/**
				 * d​i​c​e
				 */
				name: string
				/**
				 * R​o​l​l​s​ ​s​o​m​e​ ​d​i​c​e​.
				 */
				description: string
			}
			perception: {
				/**
				 * p​e​r​c​e​p​t​i​o​n
				 */
				name: string
				/**
				 * r​o​l​l​s​ ​p​e​r​c​e​p​t​i​o​n​ ​f​o​r​ ​y​o​u​r​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r
				 */
				description: string
			}
			save: {
				/**
				 * s​a​v​e
				 */
				name: string
				/**
				 * r​o​l​l​s​ ​a​ ​s​a​v​e​ ​f​o​r​ ​y​o​u​r​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r
				 */
				description: string
			}
			skill: {
				/**
				 * s​k​i​l​l
				 */
				name: string
				/**
				 * r​o​l​l​s​ ​a​ ​s​k​i​l​l​ ​f​o​r​ ​y​o​u​r​ ​a​c​t​i​v​e​ ​c​h​a​r​a​c​t​e​r
				 */
				description: string
			}
		}
	}
	commandOptions: {
		wgUrl: {
			/**
			 * u​r​l
			 */
			name: string
			/**
			 * T​h​e​ ​u​r​l​ ​o​f​ ​y​o​u​r​ ​w​a​n​d​e​r​e​r​'​s​ ​g​u​i​d​e​ ​c​h​a​r​a​c​t​e​r​.
			 */
			description: string
		}
		name: {
			/**
			 * n​a​m​e
			 */
			name: string
			/**
			 * T​h​e​ ​n​a​m​e​ ​o​f​ ​y​o​u​r​ ​w​a​n​d​e​r​e​r​'​s​ ​g​u​i​d​e​ ​c​h​a​r​a​c​t​e​r​.
			 */
			description: string
		}
		id: {
			/**
			 * c​h​a​r​a​c​t​e​r​_​i​d
			 */
			name: string
			/**
			 * T​h​e​ ​i​d​ ​o​f​ ​y​o​u​r​ ​w​a​n​d​e​r​e​r​'​s​ ​g​u​i​d​e​ ​c​h​a​r​a​c​t​e​r​.
			 */
			description: string
		}
		saveChoice: {
			/**
			 * s​a​v​e
			 */
			name: string
			/**
			 * T​h​e​ ​s​a​v​e​ ​t​o​ ​r​o​l​l​.
			 */
			description: string
		}
		skillChoice: {
			/**
			 * s​k​i​l​l
			 */
			name: string
			/**
			 * T​h​e​ ​s​k​i​l​l​ ​t​o​ ​r​o​l​l​.
			 */
			description: string
			overwrites: {
				/**
				 * T​h​e​ ​s​k​i​l​l​ ​t​o​ ​u​s​e​ ​f​o​r​ ​i​n​i​t​i​a​t​i​v​e​ ​i​n​s​t​e​a​d​ ​o​f​ ​p​e​r​c​e​p​t​i​o​n​.
				 */
				initJoinDescription: string
			}
		}
		abilityChoice: {
			/**
			 * a​b​i​l​i​t​y
			 */
			name: string
			/**
			 * T​h​e​ ​a​b​i​l​i​t​y​ ​t​o​ ​r​o​l​l​.
			 */
			description: string
		}
		attackChoice: {
			/**
			 * a​t​t​a​c​k
			 */
			name: string
			/**
			 * T​h​e​ ​a​t​t​a​c​k​ ​t​o​ ​r​o​l​l​.
			 */
			description: string
		}
		rollExpression: {
			/**
			 * d​i​c​e
			 */
			name: string
			/**
			 * T​h​e​ ​d​i​c​e​ ​e​x​p​r​e​s​s​i​o​n​ ​t​o​ ​r​o​l​l​.​ ​S​i​m​i​l​a​r​ ​t​o​ ​R​o​l​l​2​0​ ​d​i​c​e​ ​r​o​l​l​s​.
			 */
			description: string
			overwrites: {
				/**
				 * D​i​c​e​ ​t​o​ ​r​o​l​l​ ​t​o​ ​j​o​i​n​ ​i​n​i​t​i​a​t​i​v​e​.
				 */
				initAddDescription: string
				/**
				 * D​i​c​e​ ​t​o​ ​r​o​l​l​ ​t​o​ ​j​o​i​n​ ​i​n​i​t​i​a​t​i​v​e​.​ ​M​o​d​i​f​i​e​s​ ​y​o​u​r​ ​s​k​i​l​l​ ​i​f​ ​y​o​u​ ​c​h​o​s​e​ ​a​ ​s​k​i​l​l​.
				 */
				initJoinDescription: string
			}
		}
		rollModifier: {
			/**
			 * m​o​d​i​f​i​e​r
			 */
			name: string
			/**
			 * A​ ​d​i​c​e​ ​e​x​p​r​e​s​s​i​o​n​ ​t​o​ ​m​o​d​i​f​y​ ​y​o​u​r​ ​r​o​l​l​.​ ​(​e​.​g​.​ ​"​+​ ​1​ ​+​ ​1​d​4​"​)
			 */
			description: string
		}
		attackRollModifier: {
			/**
			 * a​t​t​a​c​k​_​m​o​d​i​f​i​e​r
			 */
			name: string
			/**
			 * A​ ​d​i​c​e​ ​e​x​p​r​e​s​s​i​o​n​ ​t​o​ ​m​o​d​i​f​y​ ​y​o​u​r​ ​a​t​t​a​c​k​ ​r​o​l​l​.​ ​(​e​.​g​.​ ​"​+​ ​1​ ​+​ ​1​d​4​"​)
			 */
			description: string
		}
		damageRollModifier: {
			/**
			 * d​a​m​a​g​e​_​m​o​d​i​f​i​e​r
			 */
			name: string
			/**
			 * A​ ​d​i​c​e​ ​e​x​p​r​e​s​s​i​o​n​ ​t​o​ ​m​o​d​i​f​y​ ​y​o​u​r​ ​d​a​m​a​g​e​ ​r​o​l​l​.​ ​(​e​.​g​.​ ​"​+​ ​1​ ​+​ ​1​d​4​"​)
			 */
			description: string
		}
		rollNote: {
			/**
			 * n​o​t​e
			 */
			name: string
			/**
			 * A​ ​n​o​t​e​ ​a​b​o​u​t​ ​t​h​e​ ​r​e​a​s​o​n​ ​f​o​r​ ​t​h​e​ ​r​o​l​l​.
			 */
			description: string
		}
		initValue: {
			/**
			 * v​a​l​u​e
			 */
			name: string
			/**
			 * A​ ​v​a​l​u​e​ ​t​o​ ​s​e​t​ ​y​o​u​r​ ​i​n​i​t​i​a​t​i​v​e​ ​t​o​.​ ​O​v​e​r​w​r​i​t​e​s​ ​a​n​y​ ​o​t​h​e​r​ ​i​n​i​t​ ​o​p​t​i​o​n​s​.
			 */
			description: string
		}
		initActor: {
			/**
			 * n​a​m​e
			 */
			name: string
			/**
			 * T​h​e​ ​n​a​m​e​ ​o​f​ ​t​h​e​ ​d​u​m​m​y​ ​c​h​a​r​a​c​t​e​r​ ​t​o​ ​a​d​d​ ​t​o​ ​i​n​i​t​i​a​t​i​v​e​.
			 */
			description: string
		}
		initCharacter: {
			/**
			 * c​h​a​r​a​c​t​e​r
			 */
			name: string
			/**
			 * A​ ​c​h​a​r​a​c​t​e​r​ ​p​r​e​s​e​n​t​ ​i​n​ ​t​h​e​ ​i​n​i​t​i​a​t​i​v​e​.
			 */
			description: string
		}
		setOption: {
			/**
			 * o​p​t​i​o​n
			 */
			name: string
			/**
			 * T​h​e​ ​c​h​a​r​a​c​t​e​r​ ​o​p​t​i​o​n​ ​t​o​ ​a​l​t​e​r​ ​(​o​n​l​y​ ​w​i​t​h​i​n​ ​t​h​i​s​ ​i​n​i​t​i​a​t​i​v​e​)​.
			 */
			description: string
			choices: {
				initiative: {
					/**
					 * i​n​i​t​i​a​t​i​v​e
					 */
					name: string
					/**
					 * i​n​i​t​i​a​t​i​v​e
					 */
					value: string
				}
				actorName: {
					/**
					 * n​a​m​e
					 */
					name: string
					/**
					 * n​a​m​e
					 */
					value: string
				}
			}
		}
		setValue: {
			/**
			 * v​a​l​u​e
			 */
			name: string
			/**
			 * T​h​e​ ​v​a​l​u​e​ ​t​o​ ​s​e​t​ ​t​h​e​ ​o​p​t​i​o​n​ ​t​o​.
			 */
			description: string
		}
	}
	embedLinks: {
		/**
		 * [​S​i​g​n​i​f​i​c​a​n​t​o​t​t​e​r​]​(​h​t​t​p​s​:​/​/​g​i​t​h​u​b​.​c​o​m​/​s​i​g​n​i​f​i​c​a​n​t​o​t​t​e​r​)
		 */
		authorEmbed: string
		/**
		 * [​V​i​e​w​ ​D​o​c​u​m​e​n​t​a​t​i​o​n​]​(​h​t​t​p​s​:​/​/​t​o​p​.​g​g​/​)
		 */
		docsEmbed: string
		/**
		 * [​H​e​l​p​ ​s​u​p​p​o​r​t​ ​K​o​b​o​l​d​'​s​ ​d​e​v​e​l​o​p​m​e​n​t​!​]​(​h​t​t​p​s​:​/​/​k​o​-​f​i​.​c​o​m​/​s​i​g​n​i​f​i​c​a​n​t​o​t​t​e​r​)
		 */
		donateEmbed: string
		/**
		 * [​I​n​v​i​t​e​ ​K​o​b​o​l​d​ ​t​o​ ​a​ ​S​e​r​v​e​r​!​]​(​h​t​t​p​s​:​/​/​d​i​s​c​o​r​d​.​c​o​m​/​)
		 */
		inviteEmbed: string
		/**
		 * [​V​i​e​w​ ​S​o​u​r​c​e​ ​C​o​d​e​]​(​h​t​t​p​s​:​/​/​g​i​t​h​u​b​.​c​o​m​/​s​i​g​n​i​f​i​c​a​n​t​o​t​t​e​r​/​k​o​b​o​l​d​)
		 */
		sourceEmbed: string
		/**
		 * [​J​o​i​n​ ​S​u​p​p​o​r​t​ ​S​e​r​v​e​r​]​(​h​t​t​p​s​:​/​/​d​i​s​c​o​r​d​.​g​g​/​6​b​S​2​G​M​5​9​u​j​)
		 */
		supportEmbed: string
		/**
		 * [​D​i​s​c​o​r​d​ ​B​o​t​ ​T​y​p​e​S​c​r​i​p​t​ ​T​e​m​p​l​a​t​e​]​(​)
		 */
		templateEmbed: string
		/**
		 * [​V​o​t​e​ ​f​o​r​ ​K​o​b​o​l​d​!​]​(​h​t​t​p​s​:​/​/​t​o​p​.​g​g​/​)
		 */
		voteEmbed: string
		/**
		 * [​W​a​n​d​e​r​e​r​'​s​ ​G​u​i​d​e​]​(​h​t​t​p​s​:​/​/​w​a​n​d​e​r​e​r​s​g​u​i​d​e​.​a​p​p​)
		 */
		wgEmbed: string
	}
}

export type TranslationFunctions = {
	commands: {
		character: {
			/**
			 * character
			 */
			name: () => LocalizedString
			/**
			 * Character management
			 */
			description: () => LocalizedString
			interactions: {
				/**
				 * Yip! You don't have any active characters! Use /import to import one.
				 */
				noActiveCharacter: () => LocalizedString
				/**
				 * Yip! Before you can {action} a character, you need to authenticate it. Give me permission to read your wanderer's guide character by following [this link]({wgBaseUrl}?characterId={charId}). Then, /character/{action} your character again!
				 */
				authenticationRequest: (arg: { action: unknown, charId: unknown, wgBaseUrl: unknown }) => LocalizedString
			}
			'import': {
				/**
				 * import
				 */
				name: () => LocalizedString
				/**
				 * Imports a Wanderer's Guide Character
				 */
				description: () => LocalizedString
				interactions: {
					/**
					 * Yip! I couldn't find the character at the url '{url}'. Check and make sure you copied it over correctly! Or just paste in the character's id value instead.
					 */
					invalidUrl: (arg: { url: unknown }) => LocalizedString
					/**
					 * Yip! {characterName} is already in the system! Did you mean to /update?
					 */
					characterAlreadyExists: (arg: { characterName: unknown }) => LocalizedString
					/**
					 * Yip! I've successfully imported {characterName}!
					 */
					success: (arg: { characterName: unknown }) => LocalizedString
				}
			}
			list: {
				/**
				 * list
				 */
				name: () => LocalizedString
				/**
				 * lists all active characters
				 */
				description: () => LocalizedString
				interactions: {
					/**
					 * Yip! You don't have any characters yet! Use /import to import some!
					 */
					noCharacters: () => LocalizedString
					characterListEmbed: {
						/**
						 * Characters
						 */
						title: () => LocalizedString
						/**
						 * {characterName}{activeText?}
						 */
						characterFieldName: (arg: { activeText?: unknown, characterName: unknown }) => LocalizedString
						/**
						 * Level {level} {heritage} {ancestry} {classes}
						 */
						characterFieldValue: (arg: { ancestry: unknown, classes: unknown, heritage: unknown, level: unknown }) => LocalizedString
					}
				}
			}
			remove: {
				/**
				 * remove
				 */
				name: () => LocalizedString
				/**
				 * removes an already imported character
				 */
				description: () => LocalizedString
				interactions: {
					removeConfirmation: {
						/**
						 * Are you sure you want to remove {characterName}?
						 */
						text: (arg: { characterName: unknown }) => LocalizedString
						/**
						 * REMOVE
						 */
						removeButton: () => LocalizedString
						/**
						 * CANCEL
						 */
						cancelButton: () => LocalizedString
						/**
						 * Yip! Character removal request expired.
						 */
						expired: () => LocalizedString
					}
					/**
					 * Yip! I've successfully removed {characterName}! You can import them again at any time.
					 */
					success: (arg: { characterName: unknown }) => LocalizedString
					/**
					 * Yip! Canceled the request to remove {characterName}!
					 */
					cancelled: (arg: { characterName: unknown }) => LocalizedString
				}
			}
			setActive: {
				/**
				 * set-active
				 */
				name: () => LocalizedString
				/**
				 * sets a character as the active character
				 */
				description: () => LocalizedString
				interactions: {
					/**
					 * Yip! {characterName} is now your active character!
					 */
					success: (arg: { characterName: unknown }) => LocalizedString
					/**
					 * Yip! I couldn't find a character matching that name! Check what characters you've imported using /character list
					 */
					notFound: () => LocalizedString
				}
			}
			sheet: {
				/**
				 * sheet
				 */
				name: () => LocalizedString
				/**
				 * displays the active character's sheet
				 */
				description: () => LocalizedString
				interactions: {
					sheet: {
						coreDataField: {
							/**
							 * Level {level} {heritage} {ancestry} {classes}
					
							 */
							name: (arg: { ancestry: unknown, classes: unknown, heritage: unknown, level: unknown }) => LocalizedString
							/**
							 * Max HP `${health}`
						AC `${armorClass}`
						Perception `${perceptionModifier}` (DC {perceptionDC})
						${classes} DC `${classDC}`
						Speed `${speed}`
					
						Background: ${background}
							 */
							value: (arg: { armorClass: unknown, background: unknown, classDC: unknown, classes: unknown, health: unknown, perceptionDC: unknown, perceptionModifier: unknown, speed: unknown }) => LocalizedString
						}
						abilitiesField: {
							/**
							 * Abilities
							 */
							name: () => LocalizedString
						}
						savesField: {
							/**
							 * Saves
							 */
							name: () => LocalizedString
						}
						skillsField: {
							/**
							 * Skills
							 */
							name: () => LocalizedString
						}
					}
				}
			}
			update: {
				/**
				 * update
				 */
				name: () => LocalizedString
				/**
				 * updates an already imported character
				 */
				description: () => LocalizedString
				interactions: {
					/**
					 * Yip! I've successfully updated {characterName}!
					 */
					success: (arg: { characterName: unknown }) => LocalizedString
				}
			}
		}
		init: {
			/**
			 * init
			 */
			name: () => LocalizedString
			/**
			 * Initiative Tracking
			 */
			description: () => LocalizedString
			interactions: {
			}
			start: {
				/**
				 * start
				 */
				name: () => LocalizedString
				/**
				 * Start initiative in the current channel.
				 */
				description: () => LocalizedString
			}
			show: {
				/**
				 * show
				 */
				name: () => LocalizedString
				/**
				 * Displays the current initiative
				 */
				description: () => LocalizedString
			}
			next: {
				/**
				 * next
				 */
				name: () => LocalizedString
				/**
				 * Moves to the next participant in the initiative order
				 */
				description: () => LocalizedString
			}
			prev: {
				/**
				 * prev
				 */
				name: () => LocalizedString
				/**
				 * Moves to the previous participant in the initiative order
				 */
				description: () => LocalizedString
			}
			jumpTo: {
				/**
				 * jump_to
				 */
				name: () => LocalizedString
				/**
				 * Jumps to a specific participant in the initiative order
				 */
				description: () => LocalizedString
			}
			join: {
				/**
				 * join
				 */
				name: () => LocalizedString
				/**
				 * Joins initiative with your active character. Defaults to rolling perception.
				 */
				description: () => LocalizedString
			}
			add: {
				/**
				 * add
				 */
				name: () => LocalizedString
				/**
				 * Adds a fake character to initiative
				 */
				description: () => LocalizedString
			}
			set: {
				/**
				 * set
				 */
				name: () => LocalizedString
				/**
				 * Sets certain properties of your character for initiative
				 */
				description: () => LocalizedString
			}
			remove: {
				/**
				 * remove
				 */
				name: () => LocalizedString
				/**
				 * Removes a character from initiative.
				 */
				description: () => LocalizedString
			}
			end: {
				/**
				 * end
				 */
				name: () => LocalizedString
				/**
				 * Ends the initiative in the current channel.
				 */
				description: () => LocalizedString
			}
		}
		roll: {
			/**
			 * roll
			 */
			name: () => LocalizedString
			/**
			 * Roll Dice
			 */
			description: () => LocalizedString
			interactions: {
			}
			ability: {
				/**
				 * ability
				 */
				name: () => LocalizedString
				/**
				 * rolls an ability for your active character
				 */
				description: () => LocalizedString
			}
			attack: {
				/**
				 * attack
				 */
				name: () => LocalizedString
				/**
				 * rolls an attack for your active character
				 */
				description: () => LocalizedString
			}
			dice: {
				/**
				 * dice
				 */
				name: () => LocalizedString
				/**
				 * Rolls some dice.
				 */
				description: () => LocalizedString
			}
			perception: {
				/**
				 * perception
				 */
				name: () => LocalizedString
				/**
				 * rolls perception for your active character
				 */
				description: () => LocalizedString
			}
			save: {
				/**
				 * save
				 */
				name: () => LocalizedString
				/**
				 * rolls a save for your active character
				 */
				description: () => LocalizedString
			}
			skill: {
				/**
				 * skill
				 */
				name: () => LocalizedString
				/**
				 * rolls a skill for your active character
				 */
				description: () => LocalizedString
			}
		}
	}
	commandOptions: {
		wgUrl: {
			/**
			 * url
			 */
			name: () => LocalizedString
			/**
			 * The url of your wanderer's guide character.
			 */
			description: () => LocalizedString
		}
		name: {
			/**
			 * name
			 */
			name: () => LocalizedString
			/**
			 * The name of your wanderer's guide character.
			 */
			description: () => LocalizedString
		}
		id: {
			/**
			 * character_id
			 */
			name: () => LocalizedString
			/**
			 * The id of your wanderer's guide character.
			 */
			description: () => LocalizedString
		}
		saveChoice: {
			/**
			 * save
			 */
			name: () => LocalizedString
			/**
			 * The save to roll.
			 */
			description: () => LocalizedString
		}
		skillChoice: {
			/**
			 * skill
			 */
			name: () => LocalizedString
			/**
			 * The skill to roll.
			 */
			description: () => LocalizedString
			overwrites: {
				/**
				 * The skill to use for initiative instead of perception.
				 */
				initJoinDescription: () => LocalizedString
			}
		}
		abilityChoice: {
			/**
			 * ability
			 */
			name: () => LocalizedString
			/**
			 * The ability to roll.
			 */
			description: () => LocalizedString
		}
		attackChoice: {
			/**
			 * attack
			 */
			name: () => LocalizedString
			/**
			 * The attack to roll.
			 */
			description: () => LocalizedString
		}
		rollExpression: {
			/**
			 * dice
			 */
			name: () => LocalizedString
			/**
			 * The dice expression to roll. Similar to Roll20 dice rolls.
			 */
			description: () => LocalizedString
			overwrites: {
				/**
				 * Dice to roll to join initiative.
				 */
				initAddDescription: () => LocalizedString
				/**
				 * Dice to roll to join initiative. Modifies your skill if you chose a skill.
				 */
				initJoinDescription: () => LocalizedString
			}
		}
		rollModifier: {
			/**
			 * modifier
			 */
			name: () => LocalizedString
			/**
			 * A dice expression to modify your roll. (e.g. "+ 1 + 1d4")
			 */
			description: () => LocalizedString
		}
		attackRollModifier: {
			/**
			 * attack_modifier
			 */
			name: () => LocalizedString
			/**
			 * A dice expression to modify your attack roll. (e.g. "+ 1 + 1d4")
			 */
			description: () => LocalizedString
		}
		damageRollModifier: {
			/**
			 * damage_modifier
			 */
			name: () => LocalizedString
			/**
			 * A dice expression to modify your damage roll. (e.g. "+ 1 + 1d4")
			 */
			description: () => LocalizedString
		}
		rollNote: {
			/**
			 * note
			 */
			name: () => LocalizedString
			/**
			 * A note about the reason for the roll.
			 */
			description: () => LocalizedString
		}
		initValue: {
			/**
			 * value
			 */
			name: () => LocalizedString
			/**
			 * A value to set your initiative to. Overwrites any other init options.
			 */
			description: () => LocalizedString
		}
		initActor: {
			/**
			 * name
			 */
			name: () => LocalizedString
			/**
			 * The name of the dummy character to add to initiative.
			 */
			description: () => LocalizedString
		}
		initCharacter: {
			/**
			 * character
			 */
			name: () => LocalizedString
			/**
			 * A character present in the initiative.
			 */
			description: () => LocalizedString
		}
		setOption: {
			/**
			 * option
			 */
			name: () => LocalizedString
			/**
			 * The character option to alter (only within this initiative).
			 */
			description: () => LocalizedString
			choices: {
				initiative: {
					/**
					 * initiative
					 */
					name: () => LocalizedString
					/**
					 * initiative
					 */
					value: () => LocalizedString
				}
				actorName: {
					/**
					 * name
					 */
					name: () => LocalizedString
					/**
					 * name
					 */
					value: () => LocalizedString
				}
			}
		}
		setValue: {
			/**
			 * value
			 */
			name: () => LocalizedString
			/**
			 * The value to set the option to.
			 */
			description: () => LocalizedString
		}
	}
	embedLinks: {
		/**
		 * [Significantotter](https://github.com/significantotter)
		 */
		authorEmbed: () => LocalizedString
		/**
		 * [View Documentation](https://top.gg/)
		 */
		docsEmbed: () => LocalizedString
		/**
		 * [Help support Kobold's development!](https://ko-fi.com/significantotter)
		 */
		donateEmbed: () => LocalizedString
		/**
		 * [Invite Kobold to a Server!](https://discord.com/)
		 */
		inviteEmbed: () => LocalizedString
		/**
		 * [View Source Code](https://github.com/significantotter/kobold)
		 */
		sourceEmbed: () => LocalizedString
		/**
		 * [Join Support Server](https://discord.gg/6bS2GM59uj)
		 */
		supportEmbed: () => LocalizedString
		/**
		 * [Discord Bot TypeScript Template]()
		 */
		templateEmbed: () => LocalizedString
		/**
		 * [Vote for Kobold!](https://top.gg/)
		 */
		voteEmbed: () => LocalizedString
		/**
		 * [Wanderer's Guide](https://wanderersguide.app)
		 */
		wgEmbed: () => LocalizedString
	}
}

export type Formatters = {}
